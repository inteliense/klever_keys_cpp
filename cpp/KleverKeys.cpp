// Generated by kleverkeys-generator

#include "KleverKeys.h"
#include "easy_encrypt/EasyEncrypt.h"

//DBB3FA030CFA455095E04D1646604D6068D113F3758254D4E71A12D0F0EEF804
DEFINE_HIDDEN_STRING(String1, 0x32, ('D')('B')('B')('3')('F')('A')('0')('3')('0')('C')('F')('A')('4')('5')('5')('0')('9')('5')('E')('0')('4')('D')('1')('6')('4')('6')('6')('0')('4')('D')('6')('0')('6')('8')('D')('1')('1')('3')('F')('3')('7')('5')('8')('2')('5')('4')('D')('4')('E')('7')('1')('A')('1')('2')('D')('0')('F')('0')('E')('E')('F')('8')('0')('4'))
//8388162C8F969EAB22056E50927DAC9A0B64F44FB11EC02F38E4CDF8347BEA2E
DEFINE_HIDDEN_STRING(String2, 0x0E, ('8')('3')('8')('8')('1')('6')('2')('C')('8')('F')('9')('6')('9')('E')('A')('B')('2')('2')('0')('5')('6')('E')('5')('0')('9')('2')('7')('D')('A')('C')('9')('A')('0')('B')('6')('4')('F')('4')('4')('F')('B')('1')('1')('E')('C')('0')('2')('F')('3')('8')('E')('4')('C')('D')('F')('8')('3')('4')('7')('B')('E')('A')('2')('E'))
//DCED5059FB86AA74409D63ED9706A0764ACCB8BC7FE218E1ED86AE4F7E07B474
DEFINE_HIDDEN_STRING(String3, 0x17, ('D')('C')('E')('D')('5')('0')('5')('9')('F')('B')('8')('6')('A')('A')('7')('4')('4')('0')('9')('D')('6')('3')('E')('D')('9')('7')('0')('6')('A')('0')('7')('6')('4')('A')('C')('C')('B')('8')('B')('C')('7')('F')('E')('2')('1')('8')('E')('1')('E')('D')('8')('6')('A')('E')('4')('F')('7')('E')('0')('7')('B')('4')('7')('4'))
//A300FA12C1811A93F27952B06E3DF350
DEFINE_HIDDEN_STRING(String4, 0x6C, ('A')('3')('0')('0')('F')('A')('1')('2')('C')('1')('8')('1')('1')('A')('9')('3')('F')('2')('7')('9')('5')('2')('B')('0')('6')('E')('3')('D')('F')('3')('5')('0'))
//1BE581D840AADCF48DCD53CD83F5824C
DEFINE_HIDDEN_STRING(String5, 0x09, ('1')('B')('E')('5')('8')('1')('D')('8')('4')('0')('A')('A')('D')('C')('F')('4')('8')('D')('C')('D')('5')('3')('C')('D')('8')('3')('F')('5')('8')('2')('4')('C'))
//DFA7A33EA7E89E40D6B9A427C6F0A2BD
DEFINE_HIDDEN_STRING(String6, 0x3F, ('D')('F')('A')('7')('A')('3')('3')('E')('A')('7')('E')('8')('9')('E')('4')('0')('D')('6')('B')('9')('A')('4')('2')('7')('C')('6')('F')('0')('A')('2')('B')('D'))
//1C908C3062B09924406A339F64A12766
DEFINE_HIDDEN_STRING(String7, 0x49, ('1')('C')('9')('0')('8')('C')('3')('0')('6')('2')('B')('0')('9')('9')('2')('4')('4')('0')('6')('A')('3')('3')('9')('F')('6')('4')('A')('1')('2')('7')('6')('6'))
//39CD4C585C27A862119DEF16705446B4
DEFINE_HIDDEN_STRING(String8, 0x35, ('3')('9')('C')('D')('4')('C')('5')('8')('5')('C')('2')('7')('A')('8')('6')('2')('1')('1')('9')('D')('E')('F')('1')('6')('7')('0')('5')('4')('4')('6')('B')('4'))
//356DFB3C9724A200632DBFDFE31ED34D
DEFINE_HIDDEN_STRING(String9, 0x47, ('3')('5')('6')('D')('F')('B')('3')('C')('9')('7')('2')('4')('A')('2')('0')('0')('6')('3')('2')('D')('B')('F')('D')('F')('E')('3')('1')('E')('D')('3')('4')('D'))
//729EBCFD74AD0130A4505AFD6D0EA947
DEFINE_HIDDEN_STRING(String10, 0x4D, ('7')('2')('9')('E')('B')('C')('F')('D')('7')('4')('A')('D')('0')('1')('3')('0')('A')('4')('5')('0')('5')('A')('F')('D')('6')('D')('0')('E')('A')('9')('4')('7'))

std::string KleverKeys::get(std::string id) {

	std::string upperId = EasyEncrypt::Utils::toUpperCase(id);
	std::string hashedId = EasyEncrypt::Utils::toUpperCase(EasyEncrypt::SHA::hash256((char*) upperId.c_str()));


	if(hashedId == "BD05A905C12AA613AC57405DBC2354D1153435BF233CEBE926C0E96900309EF6") {
		return GetString1();
	} else if(hashedId == "32B41D985586815848ADBF48C3E3077C719DEBFBCFB5AB8C5F6E04344E43A917") {
		return GetString2();
	} else if(hashedId == "81C6C89C49547D0C690BF1CC2F17FB0E28973B69BD3E24B4FDBB6937C827B743") {
		return GetString3();
	} else if(hashedId == "6582B318AFD8163D373826B87DDF3E86EC01620361D54A45E3FEED848D6A8CE1") {
		return GetString4();
	} else if(hashedId == "C2422B8C8C4A512AE67DC7BCE6BE4513DB8C70A572AB960D99D1A838EEFE35BC") {
		return GetString5();
	} else if(hashedId == "E48AD08F0639CDBAB64AEE83D3598A68619DF772217553EAC3B62B0A802CF157") {
		return GetString6();
	} else if(hashedId == "8F4261E871AFF966A11D1F9C6EB4F229E8AF1F6250B059641D9E579C6A27CA9F") {
		return GetString7();
	} else if(hashedId == "AEEACABDABA81A11D6B7C51868A988EB2A45D108EA54DCDC4034FC85692AFA15") {
		return GetString8();
	} else if(hashedId == "88E51450EF3CC7B33AAF911327C90ADEEA1B9D97D259497A3C72221D35807242") {
		return GetString9();
	} else if(hashedId == "CEE3C3CE81BCFB54481CFCD891C122AAEE17451878938C80146FBBB71E8FA6C5") {
		return GetString10();
	}


	//return a random hex value, disguised as a 32 bit hex key.
	return EasyEncrypt::Utils::toUpperCase((const char*) EasyEncrypt::Random::secureEncoded(32, EasyEncrypt::HEX));


}

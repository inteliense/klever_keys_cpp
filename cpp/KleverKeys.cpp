// Generated by kleverkeys-generator
// For extra security, complete the last return value with a secure random hex value. (32 bytes)

#include "KleverKeys.h"
#include "easy_encrypt/EasyEncrypt.h"

//AB4A1923098239ED87D57DFE46AE3D368C47A40CE2DC2576D005C535E4AAED24
DEFINE_HIDDEN_STRING(String1, 0x60, ('A')('B')('4')('A')('1')('9')('2')('3')('0')('9')('8')('2')('3')('9')('E')('D')('8')('7')('D')('5')('7')('D')('F')('E')('4')('6')('A')('E')('3')('D')('3')('6')('8')('C')('4')('7')('A')('4')('0')('C')('E')('2')('D')('C')('2')('5')('7')('6')('D')('0')('0')('5')('C')('5')('3')('5')('E')('4')('A')('A')('E')('D')('2')('4'))
//80D9A946C7222E9D4BF58257B2B32B73ECC6F4FFAD57461EC45DAF9E8CE02A6C
DEFINE_HIDDEN_STRING(String2, 0x53, ('8')('0')('D')('9')('A')('9')('4')('6')('C')('7')('2')('2')('2')('E')('9')('D')('4')('B')('F')('5')('8')('2')('5')('7')('B')('2')('B')('3')('2')('B')('7')('3')('E')('C')('C')('6')('F')('4')('F')('F')('A')('D')('5')('7')('4')('6')('1')('E')('C')('4')('5')('D')('A')('F')('9')('E')('8')('C')('E')('0')('2')('A')('6')('C'))
//62A9BE37F5656C7E990417DF926F51C5399DED02C1ADF0E89D4BD49EBEBAC39E
DEFINE_HIDDEN_STRING(String3, 0x6F, ('6')('2')('A')('9')('B')('E')('3')('7')('F')('5')('6')('5')('6')('C')('7')('E')('9')('9')('0')('4')('1')('7')('D')('F')('9')('2')('6')('F')('5')('1')('C')('5')('3')('9')('9')('D')('E')('D')('0')('2')('C')('1')('A')('D')('F')('0')('E')('8')('9')('D')('4')('B')('D')('4')('9')('E')('B')('E')('B')('A')('C')('3')('9')('E'))
//5480DB6039F20E44E55C5DEDC95A1DBE
DEFINE_HIDDEN_STRING(String4, 0x3E, ('5')('4')('8')('0')('D')('B')('6')('0')('3')('9')('F')('2')('0')('E')('4')('4')('E')('5')('5')('C')('5')('D')('E')('D')('C')('9')('5')('A')('1')('D')('B')('E'))
//607BA0987673BFBA45C9F33466DE231D
DEFINE_HIDDEN_STRING(String5, 0x1D, ('6')('0')('7')('B')('A')('0')('9')('8')('7')('6')('7')('3')('B')('F')('B')('A')('4')('5')('C')('9')('F')('3')('3')('4')('6')('6')('D')('E')('2')('3')('1')('D'))
//ACEEBD8E60E307DB82FC2AA034C330D0
DEFINE_HIDDEN_STRING(String6, 0x5F, ('A')('C')('E')('E')('B')('D')('8')('E')('6')('0')('E')('3')('0')('7')('D')('B')('8')('2')('F')('C')('2')('A')('A')('0')('3')('4')('C')('3')('3')('0')('D')('0'))
//395578F9F3F7EF6DF7FA32FD6159476C
DEFINE_HIDDEN_STRING(String7, 0x08, ('3')('9')('5')('5')('7')('8')('F')('9')('F')('3')('F')('7')('E')('F')('6')('D')('F')('7')('F')('A')('3')('2')('F')('D')('6')('1')('5')('9')('4')('7')('6')('C'))
//D2B6C5FA0B25D47A38911F239C7789F1
DEFINE_HIDDEN_STRING(String8, 0x1D, ('D')('2')('B')('6')('C')('5')('F')('A')('0')('B')('2')('5')('D')('4')('7')('A')('3')('8')('9')('1')('1')('F')('2')('3')('9')('C')('7')('7')('8')('9')('F')('1'))
//9BA90112FEBF39FEA71751EE4EA30BAD
DEFINE_HIDDEN_STRING(String9, 0x40, ('9')('B')('A')('9')('0')('1')('1')('2')('F')('E')('B')('F')('3')('9')('F')('E')('A')('7')('1')('7')('5')('1')('E')('E')('4')('E')('A')('3')('0')('B')('A')('D'))
//7D593F0C3202EF7C4105FF66453A5D24
DEFINE_HIDDEN_STRING(String10, 0x47, ('7')('D')('5')('9')('3')('F')('0')('C')('3')('2')('0')('2')('E')('F')('7')('C')('4')('1')('0')('5')('F')('F')('6')('6')('4')('5')('3')('A')('5')('D')('2')('4'))

std::string KleverKeys::get(std::string id) {

    std::string upperId = EasyEncrypt::Utils::toUpperCase(id);
    std::string hashedId = EasyEncrypt::Utils::toUpperCase(EasyEncrypt::SHA::hash256((char*) upperId.c_str()));


    if(hashedId == "52E9C59E85355AF283260A1745EEB9F0845AE96B0E108A3C79447F681A03C6AE") {
        return GetString1();
    } else if(hashedId == "5931CCB671867C70EDC5FCF0BDEE646C4DBBCFCA066671BECFE47F6F25AD5264") {
        return GetString2();
    } else if(hashedId == "C9F64EC2819A3BB493F5D4F6AD83D8D731A7EF0953322651C7D995177DE967F4") {
        return GetString3();
    } else if(hashedId == "5E440864940C05086430C46186ADA26E132252C6C128975D60F5242F13C9345F") {
        return GetString4();
    } else if(hashedId == "B50361C41DDEA5A01C28A5CE4223456503ADD13FBBBC723113573FC3F8554368") {
        return GetString5();
    } else if(hashedId == "102992C9DFA3753111F5AAF2F10C7125A711126C9797F02F0C8810A72DFB8665") {
        return GetString6();
    } else if(hashedId == "899D069224E7306C779FB8BBD2B649FA39B2E6B0B59D6EEE9D97077C9F0B4EF2") {
        return GetString7();
    } else if(hashedId == "CB7EDB30AD816A71E74DDEFCA23BD3AAD96994676CE63D62E5397FA4E96144E4") {
        return GetString8();
    } else if(hashedId == "8DC1311B52FE1E44F819117F1EB9B9CBA5875194826518F30715B91976279126") {
        return GetString9();
    } else if(hashedId == "FA675E1C7C5922BE1D1162E470FE5D73A2EA69A7002F2ED1A996A511FB7B23CB") {
        return GetString10();
    }


    //return a random SHA hash, disguised as a 32 bit hex key.
    return EasyEncrypt::Utils::toUpperCase(EasyEncrypt::SHA::sha256((char*) std::to_string(EasyEncrypt::Utils::goodRandom(0, INT32_MAX, 0)).c_str()));


}
